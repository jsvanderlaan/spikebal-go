package main

import (
	"testing"
)

func TestMatrixAdd(t *testing.T) {
	m1 := NewMatrix()
	m1[0][0] = 2
	m1[1][0] = 1
	m1[8][8] = 1
	m2 := NewMatrix()
	m2[0][0] = 1
	m2[2][0] = 1
	m2[8][8] = 1

	res := m1.Add(m2)

	expected := NewMatrix()
	expected[0][0] = 3
	expected[1][0] = 1
	expected[2][0] = 1
	expected[8][8] = 2

	if res[0][0] != expected[0][0] || res[1][0] != expected[1][0] || res[2][0] != expected[2][0] || res[8][8] != expected[8][8] {
		t.Errorf("Expected %v + %v to be %v", m1, m2, expected)
	}
}

func TestMatrixEqualsFalse(t *testing.T) {
	m1 := &Matrix{
		{0, 0, 1, 0, 1, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 1, 1, 0, 0},
		{1, 0, 0, 0, 0, 0, 0, 0, 1},
		{0, 0, 0, 0, 0, 1, 1, 0, 0},
		{1, 0, 0, 0, 0, 0, 0, 0, 1},
		{0, 1, 0, 1, 0, 0, 0, 0, 0},
		{0, 1, 0, 1, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 1, 0, 1, 0, 0, 0, 0},
	}
	m2 := &Matrix{
		{1, 0, 1, 0, 1, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 1, 1, 0, 0},
		{1, 0, 0, 0, 0, 0, 0, 0, 1},
		{0, 0, 0, 0, 0, 1, 1, 0, 0},
		{1, 0, 0, 0, 0, 0, 0, 0, 1},
		{0, 1, 0, 1, 0, 0, 0, 0, 0},
		{0, 1, 0, 1, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 1, 0, 1, 0, 0, 0, 0},
	}

	res := m1.Equals(m2)

	if res {
		t.Errorf("Expected result \n%v to not be equal to \n%v", m1, m2)
	}
}

func TestMatrixEqualsTrue(t *testing.T) {
	m1 := &Matrix{
		{0, 0, 1, 0, 1, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 1, 1, 0, 0},
		{1, 0, 0, 0, 0, 0, 0, 0, 1},
		{0, 0, 0, 0, 0, 1, 1, 0, 0},
		{1, 0, 0, 0, 0, 0, 0, 0, 1},
		{0, 1, 0, 1, 0, 0, 0, 0, 0},
		{0, 1, 0, 1, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 1, 0, 1, 0, 0, 0, 0},
	}
	m2 := &Matrix{
		{0, 0, 1, 0, 1, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 1, 1, 0, 0},
		{1, 0, 0, 0, 0, 0, 0, 0, 1},
		{0, 0, 0, 0, 0, 1, 1, 0, 0},
		{1, 0, 0, 0, 0, 0, 0, 0, 1},
		{0, 1, 0, 1, 0, 0, 0, 0, 0},
		{0, 1, 0, 1, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 1, 0, 1, 0, 0, 0, 0},
	}

	res := m1.Equals(m2)

	if !res {
		t.Errorf("Expected result \n%v to be equal to \n%v", m1, m2)
	}
}
